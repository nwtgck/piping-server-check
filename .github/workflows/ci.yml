name: CI

on: [push]

jobs:
  test:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Build
        run: CGO_ENABLED=0 go build -o piping-server-check main/main.go
      # Without this, HTTP/3 client causes an error "failed to sufficiently increase receive buffer size (was: 208 kiB, wanted: 2048 kiB, got: 416 kiB)": https://github.com/quic-go/quic-go/wiki/UDP-Receive-Buffer-Size
      - name: UDP receive buffer size seting
        run: sudo sysctl -w net.core.rmem_max=2500000
      - name: Test
        run: go test -v ./...
      - name: Install piping-server to /tmp and create certificates
        run: |
          set -eu
          cd /tmp
          curl -L https://github.com/nwtgck/piping-server-pkg/releases/download/v1.12.8/piping-server-pkg-linuxstatic-x64.tar.gz | tar xzvf -
          mv ./piping-server-pkg-linuxstatic-x64/piping-server .
          (mkdir ssl_certs && cd ssl_certs && openssl req -x509 -newkey rsa:4096 -keyout server.key -out server.crt -days 365 -sha256 -nodes --subj '/CN=localhost/')
      - name: Operational test
        run: |
          set -eu
          ./piping-server-check --http1.1 --http1.1-tls --h2 --tls-skip-verify --server-command='exec /tmp/piping-server --http-port=$HTTP_PORT --enable-https --https-port=$HTTPS_PORT --crt-path=/tmp/ssl_certs/server.crt --key-path=/tmp/ssl_certs/server.key'
      - name: Operational test (error case)
        run: |
          set -eu
          # Should fail because no --tls-skip-verify
          ! ./piping-server-check --http1.1 --http1.1-tls --server-command='exec /tmp/piping-server --http-port=$HTTP_PORT --enable-https --https-port=$HTTPS_PORT --crt-path=/tmp/ssl_certs/server.crt --key-path=/tmp/ssl_certs/server.key'
